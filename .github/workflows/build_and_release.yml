name: Build and Release APK

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - "assets/screenshot-explain.png"

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for accurate versioning

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.1" # Use a specific Flutter version, ideally matching your project
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Determine next version and create tag
        id: versioning
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="0.0.0"
          fi
          echo "Latest tag: $LATEST_TAG"

          MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
          MINOR=$(echo $LATEST_TAG | cut -d. -f2)
          PATCH=$(echo $LATEST_TAG | cut -d. -f3)

          # Analyze commit messages since last tag
          COMMITS=$(git log --pretty=format:"%s" ${LATEST_TAG}..HEAD)

          # Check for breaking changes
          if echo "$COMMITS" | grep -q "BREAKING CHANGE"; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          # Check for new features
          elif echo "$COMMITS" | grep -q "feat:"; then
            MINOR=$((MINOR + 1))
            PATCH=0
          # Default to patch increase
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          git tag $NEW_VERSION
          git push --tags origin # Push all tags, including the new one

      - name: Build APK
        run: flutter build apk --release # Build in release mode

      - name: Install Android SDK tools
        run: |
          sudo apt-get update
          sudo apt-get install -y android-sdk-platform-tools android-sdk-build-tools
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -s https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o commandlinetools.zip
          unzip commandlinetools.zip
          rm commandlinetools.zip
          cd -
          yes | $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "build-tools;34.0.0" "platform-tools" "platforms;android-34"
      - name: Align APK
        run: |
          "$ANDROID_SDK_ROOT/build-tools/34.0.0/zipalign" -v -p 4 build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/app-release-aligned.apk

      - name: Sign APK
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > keystore.jks
          "$ANDROID_SDK_ROOT/build-tools/34.0.0/apksigner" sign --ks keystore.jks --ks-pass pass:"${{ secrets.KEYSTORE_PASSWORD }}" --ks-key-alias "${{ secrets.KEY_ALIAS }}" --key-pass pass:"${{ secrets.KEY_PASSWORD }}" --out build/app/outputs/flutter-apk/app-release-signed.apk build/app/outputs/flutter-apk/app-release-aligned.apk
          "$ANDROID_SDK_ROOT/build-tools/34.0.0/apksigner" verify --verbose build/app/outputs/flutter-apk/app-release-signed.apk

      - name: Rename APK
        run: mv build/app/outputs/flutter-apk/app-release-signed.apk build/app/outputs/flutter-apk/crux-sync-${{ env.NEW_VERSION }}.apk

      - name: Copy for latest
        run: cp build/app/outputs/flutter-apk/crux-sync-${{ env.NEW_VERSION }}.apk build/app/outputs/flutter-apk/crux-sync-latest.apk

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.NEW_VERSION }}"
          prerelease: false
          title: "Release ${{ env.NEW_VERSION }}"
          files: |
            build/app/outputs/flutter-apk/crux-sync-${{ env.NEW_VERSION }}.apk
            build/app/outputs/flutter-apk/crux-sync-latest.apk
